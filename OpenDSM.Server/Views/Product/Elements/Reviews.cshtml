@using OpenDSM.Core.Handlers
@using OpenDSM.Core.Models
@model ProductModel
@{
    Layout = null;
    bool IsOwner = (bool)(ViewData["IsOwner"] ?? false);
    bool HasProduct = (bool)(ViewData["HasProduct"] ?? false);
    int product_id = (int)(ViewData["ProductID"] ?? -1);
    string name = (string)(ViewData["ProductName"] ?? "");
    int filter = (int)(ViewData["Filter"]??-1);

    var dem = ReviewListHandler.GetProductAverageRating(Model);
    string review_count = dem.count.ToString("G");
    if (dem.count >= Math.Pow(10, 9))
    {
        review_count = $"{(dem.count / Math.Pow(10, 9)):N2}B";
    }
    else if (dem.count >= Math.Pow(10, 6))
    {
        review_count = $"{(dem.count / Math.Pow(10, 6)):N2}M";
    }
    else if (dem.count >= Math.Pow(10, 3))
    {
        review_count = $"{(dem.count / Math.Pow(10, 3)):N2}K";
    }
    else
    {
        review_count = dem.count.ToString();
    }
}
<h2>Ratings and reviews</h2>
<p class="paragraph-2">All reviews are verified. <a href="#">View our documentation on reviews</a></p>
<div class="list vertical">
    <div class="list horizontal">
        <div class="list vertical rating">
            <h1>@(Math.Round(dem.average / (float)10.0, 1))</h1>
            <p class="paragraph-2">@review_count reviews</p>
        </div>
        <div class="list vertical bars">
            <div class="list horizontal ratings-bar @(filter == 5 ? "active":"")">
                <p class="paragraph-1">5</p>
                <div class="progress-bar">
                    <div class="fill" style="width: @dem.five%;"></div>
                </div>
            </div>
            <div class="list horizontal ratings-bar @(filter == 4 ? "active":"")">
                <p class="paragraph-1">4</p>
                <div class="progress-bar">
                    <div class="fill" style="width: @dem.four%;"></div>
                </div>
            </div>
            <div class="list horizontal ratings-bar @(filter == 3 ? "active":"")">
                <p class="paragraph-1">3</p>
                <div class="progress-bar">
                    <div class="fill" style="width: @dem.three%;"></div>
                </div>
            </div>
            <div class="list horizontal ratings-bar @(filter == 2 ? "active":"")">
                <p class="paragraph-1">2</p>
                <div class="progress-bar">
                    <div class="fill" style="width: @dem.two%;"></div>
                </div>
            </div>
            <div class="list horizontal ratings-bar @(filter == 1 ? "active":"")">
                <p class="paragraph-1">1</p>
                <div class="progress-bar">
                    <div class="fill" style="width: @dem.one%;"></div>
                </div>
            </div>
        </div>
    </div>
    @{
        ReviewModel[] reviews = filter == -1 ? ReviewListHandler.GetProductReviews(Model).Take(10).ToArray() : ReviewListHandler.GetProductReviews(Model).Where(x => x.Rating == filter * 10 || (filter == 1 && x.Rating == (filter * 10) - 5) || x.Rating == (filter * 10) + 5).Take(10).ToArray();
    }
    @if (reviews.Any())
    {
            <div class="list vertical testimonials">
            @foreach (ReviewModel review in reviews)
            {
                string active = "";
                TimeSpan span = new TimeSpan(0);
                try
                {
                    span = review.User.OwnedProducts[review.Product.Id].activeTime;
                }
                catch
                {

                }
                if (span.TotalDays >= 1)
                {
                    active = $"{Math.Round(span.TotalDays, 1)} Days";
                }
                else if (span.TotalHours >= 1)
                {
                    active = $"{Math.Round(span.TotalHours, 1)} Hours";
                }
                else if (span.TotalMinutes >= 1)
                {
                    active = $"{Math.Round(span.TotalMinutes, 1)} Minutes";
                }
                else if (span.TotalSeconds >= 1)
                {
                    active = $"{Math.Round(span.TotalSeconds, 1)} Seconds";
                }
                else
                {
                    active = "Never Used";
                }
                        <div class="testimonial">
                        <div class="list vertical">
                            <div class="list horizontal profile-info">
                                <span class="profile-image" style="background-image: url('/api/auth/image/profile?id=@review.User.Id');"></span>
                                <h4 class="name">@review.User.Username</h4>
                            </div>
                            <div class="list vertical testimonial-details">
                                <div class="list horizontal">
                                    <span class="title">Rating</span>
                                    <span class="value">@Math.Round(review.Rating/10.0,1) Stars</span>
                                </div>
                                <div class="list horizontal">
                                    <span class="title">Date</span>
                                    <span class="value">@review.Posted.ToString("G")</span>
                                </div>
                                <div class="list horizontal">
                                    <span class="title">Time Used</span>
                                    <span class="value">@active</span>
                                </div>
                            </div>
                            <p class="paragraph-1 testimonial-subject">@review.Subject</p>
                            <p class="paragraph-1 testimonial-description">
                            @review.Body
                            </p>
                        </div>
                        <!-- <button class="btn secondary reply-button">Reply</button>-->
                    </div>
            }
            </div>
    }
    <!--ineligible-->
        <div id="leave-review-form" class="list vertical @((IsOwner || !HasProduct)?"":"")" style="margin: 100px 0">
        @if (!reviews.Any())
        {
            <h3>No Reviews?</h3>
            <p class="paragraph-2">Be the first to leave a review!</p>
        }else{
            <h3>Leave a Review!</h3>
            <p class="paragraph-2">Tell the developers what you think!</p>
        }
            <div class="input" title="A brief overview of your expirence">
                <label for="review-subject-box">Subject</label>
                <input type="text" id="review-subject-box" autocomplete="false" required>
            </div>

            <div class="stars-input list vertical" value="0">
                <h4>Rating</h4>
                <div class="list horizontal">
                    <span class="star-input fa-regular fa-star" star="0"></span>
                    <span class="star-input fa-regular fa-star" star="1"></span>
                    <span class="star-input fa-regular fa-star" star="2"></span>
                    <span class="star-input fa-regular fa-star" star="3"></span>
                    <span class="star-input fa-regular fa-star" star="4"></span>
                </div>
            </div>

            <div class="large-input list vertical" id="review-body-input">
                <h4>Body</h4>
                <p class="paragraph-2">This is using markdown language. For more information check our <a href="#">documentation on markdown</a></p>
                <textarea type="text" id="review-body-box" autocomplete="false" required></textarea>
            </div>

            <button id="leave-review-button" class="btn" style="margin-left: 0; margin-right: 0">Leave Review!</button>
        </div>
</div>
<section class="ad"></section>